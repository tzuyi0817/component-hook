import{d as h,r as g,h as P,c as j,o as b,a as D,F as S,b as c,e as t,u as r,t as M,g as i,m as k,w as y}from"./index-d7-9zujl.js";import{D as V}from"./index-Gq3A8YOt.js";import{f as F,D as I,a as J,g as C,b as x,d as Y,e as W,h as q,j as z,k as G,_ as K,i as Q,c as X}from"./installation-q1PZ3Sc4.js";const L=h({__name:"DatePicker",props:{show:{type:Boolean},modelValue:{},title:{default:J},columnsType:{default:()=>I},minDate:{default:()=>new Date(new Date().getFullYear()-10,0,1)},maxDate:{default:()=>new Date(new Date().getFullYear()+10,11,31)},teleport:{},confirmButtonText:{},cancelButtonText:{},formatYearLabel:{type:Function,default:F},formatMonthLabel:{type:Function,default:F},formatDayLabel:{type:Function,default:F}},emits:["update:show","update:modelValue","confirm","cancel","open","closed"],setup(f,{emit:n}){const e=f,m=n,a=g([]),l=g([]),s=P({get:()=>e.show,set:o=>m("update:show",o)}),w=P(()=>{const{columnsType:o,minDate:u,maxDate:d}=e,p={year:$,month:B,day:U};return o.map(v=>p[v](u,d))});function $(o,u){const d=o.getFullYear(),p=u.getFullYear();return C(d,p,e.formatYearLabel)}function B(o,u){const d=T("year"),p=x(d,o)?o.getMonth()+1:1,v=Y(d,u)?u.getMonth()+1:12;return C(p,v,e.formatMonthLabel)}function U(o,u){const d=T("year"),p=T("month"),v=x(d,o)&&W(p,o),R=Y(d,u)&&q(p,u),H=v?o.getDate():1,N=R?u.getDate():z(d,p);return C(H,N,e.formatDayLabel)}function T(o){const{columnsType:u}=e,d=u.indexOf(o),p=a.value[d];return p?Number(p):G(e.minDate,e.maxDate,o)}function _(o){m("update:modelValue",o),l.value=o,m("confirm",o)}function O(){m("cancel")}function A(){if(m("open"),e.modelValue&&e.modelValue.length){a.value=[...e.modelValue];return}const{columnsType:o}=e;a.value=o.map(u=>T(u))}function E(){a.value=e.modelValue?[...e.modelValue]:[...l.value],m("closed")}return(o,u)=>(b(),j(K,{modelValue:a.value,"onUpdate:modelValue":u[0]||(u[0]=d=>a.value=d),show:s.value,"onUpdate:show":u[1]||(u[1]=d=>s.value=d),title:o.title,columns:w.value,teleport:o.teleport,"confirm-button-text":o.confirmButtonText,"cancel-button-text":o.cancelButtonText,linkage:"",onConfirm:_,onCancel:O,onOpen:A,onClosed:E},null,8,["modelValue","show","title","columns","teleport","confirm-button-text","cancel-button-text"]))}}),Z={class:"mt-6 text-sm font-mono"},ee=h({__name:"Base",setup(f){const n=g(!1),e=g([]);function m(l){e.value=l}function a(){console.log("cancel")}return(l,s)=>(b(),D(S,null,[c(r(L),{show:n.value,"onUpdate:show":s[0]||(s[0]=w=>n.value=w),title:"Base Selector",onConfirm:m,onCancel:a},null,8,["show"]),t("button",{onClick:s[1]||(s[1]=w=>n.value=!0)},"toggle Base picker"),t("p",Z,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),te={class:"mt-6 text-sm font-mono"},ne=h({__name:"ColumnsType",setup(f){const n=g(!1),e=g([2030,8]);return(m,a)=>(b(),D(S,null,[c(r(L),{modelValue:e.value,"onUpdate:modelValue":a[0]||(a[0]=l=>e.value=l),show:n.value,"onUpdate:show":a[1]||(a[1]=l=>n.value=l),title:"Columns Type Selector","columns-type":["year","month"]},null,8,["modelValue","show"]),t("button",{onClick:a[2]||(a[2]=l=>n.value=!0)},"toggle Columns Type picker"),t("p",te,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),oe={class:"mt-6 text-sm font-mono"},ae=h({__name:"CustomRange",setup(f){const n=g(!1),e=g([]);return(m,a)=>(b(),D(S,null,[c(r(L),{modelValue:e.value,"onUpdate:modelValue":a[0]||(a[0]=l=>e.value=l),show:n.value,"onUpdate:show":a[1]||(a[1]=l=>n.value=l),title:"Custom Range Selector","min-date":new Date(2024,0,1),"max-date":new Date(2026,5,1)},null,8,["modelValue","show","min-date","max-date"]),t("button",{onClick:a[2]||(a[2]=l=>n.value=!0)},"toggle Custom Range picker"),t("p",oe,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),le={class:"mt-6 text-sm font-mono"},ue=h({__name:"LabelFormatter",setup(f){const n=g(!1),e=g([]),m={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"};return(a,l)=>(b(),D(S,null,[c(r(L),{modelValue:e.value,"onUpdate:modelValue":l[0]||(l[0]=s=>e.value=s),show:n.value,"onUpdate:show":l[1]||(l[1]=s=>n.value=s),title:"Label Formatter Selector","columns-type":["month","day","year"],"format-month-label":s=>m[s],"format-day-label":s=>s.padStart(2,"0")},null,8,["modelValue","show","format-month-label","format-day-label"]),t("button",{onClick:l[2]||(l[2]=s=>n.value=!0)},"toggle Label Formatter picker"),t("p",le,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),re=["innerHTML"],se=["innerHTML"],de=["innerHTML"],ce=h({__name:"ComponentDatePicker",props:{frontEndFrame:{},baseSource:{},basePlayground:{},columnsTypeSource:{},columnsTypePlayground:{},customRangeSource:{},customRangePlayground:{},labelFormatterSource:{},labelFormatterPlayground:{},indexMd:{},language:{}},setup(f){return(n,e)=>(b(),D("div",null,[e[6]||(e[6]=t("h2",null,"Date Picker",-1)),t("p",null,[e[0]||(e[0]=i(" Date Picker component with ",-1)),t("code",null,M(n.frontEndFrame),1),e[1]||(e[1]=i(". ",-1))]),t("div",{innerHTML:r(k).render(r(Q))},null,8,re),c(r(V),{title:"Base Usage",source:n.baseSource,playground:n.basePlayground,language:n.language},{description:y(()=>e[2]||(e[2]=[t("p",null,"Date picker for selecting year, month and day.",-1),t("p",null,"When no date is specified, the current date is selected by default.",-1)])),default:y(()=>[c(r(ee))]),_:1},8,["source","playground","language"]),c(r(V),{title:"Columns Type",source:n.columnsTypeSource,playground:n.columnsTypePlayground,language:n.language},{description:y(()=>e[3]||(e[3]=[t("p",null,[i(" The type of options can be controlled through the "),t("code",null,"columnsType"),i(" attribute, which supports permuting and combining year, month and day in any order. ")],-1),t("p",null,"Three options of year, month and day are displayed by default.",-1),t("ul",{class:"mt-4 pl-8 list-disc"},[t("li",null,[t("code",null,"['year']"),i(" represents the option to display only the year.")]),t("li",null,[t("code",null,"['month']"),i(" represents the option to display only the month.")]),t("li",null,[t("code",null,"['year', 'month']"),i(" represents the option to display only the year and month.")]),t("li",null,[t("code",null,"['month', 'day']"),i(" represents the option to display only the month and day.")])],-1)])),default:y(()=>[c(r(ne))]),_:1},8,["source","playground","language"]),c(r(V),{title:"Custom Date Range",source:n.customRangeSource,playground:n.customRangePlayground,language:n.language},{description:y(()=>e[4]||(e[4]=[t("p",null,[i("Optional time ranges are set via the "),t("code",null,"minDate"),i(" and "),t("code",null,"maxDate"),i(" properties.")],-1),t("p",null,"The default selectable range is 10 years before and after the current year.",-1)])),default:y(()=>[c(r(ae))]),_:1},8,["source","playground","language"]),c(r(V),{title:"Label Formatter",source:n.labelFormatterSource,playground:n.labelFormatterPlayground,language:n.language},{description:y(()=>e[5]||(e[5]=[t("p",null,[i(" Display labels can be converted through the "),t("code",null,"formatYearLabel"),i(", "),t("code",null,"formatMonthLabel"),i(" and "),t("code",null,"formatDayLabel"),i(" properties. ")],-1)])),default:y(()=>[c(r(ue))]),_:1},8,["source","playground","language"]),e[7]||(e[7]=t("h3",null,"API",-1)),t("div",{innerHTML:r(k).render(n.indexMd)},null,8,se),t("div",{innerHTML:r(k).render(r(X))},null,8,de)]))}});export{ce as _};
