import{d as h,r as y,h as C,c as I,o as b,a as D,F as V,b as g,e as t,u as s,t as M,g as m,m as L,w as f}from"./index-DpJ0bSUx.js";import{D as T}from"./index-Dxakq7hu.js";import{f as k,D as J,a as W,g as F,b as P,d as Y,e as q,h as z,j as G,k as K,_ as Q,i as X,c as Z}from"./installation-D8Y5kEc_.js";const S=h({__name:"DatePicker",props:{show:{type:Boolean},modelValue:{},title:{default:W},columnsType:{default:()=>J},minDate:{default:()=>new Date(new Date().getFullYear()-10,0,1)},maxDate:{default:()=>new Date(new Date().getFullYear()+10,11,31)},teleport:{},confirmButtonText:{},cancelButtonText:{},formatYearLabel:{type:Function,default:k},formatMonthLabel:{type:Function,default:k},formatDayLabel:{type:Function,default:k}},emits:["update:show","update:modelValue","confirm","cancel","open","closed"],setup(n,{emit:r}){const e=n,c=r,o=y([]),a=y([]),d=C({get:()=>e.show,set:l=>c("update:show",l)}),x=C(()=>{const{columnsType:l,minDate:u,maxDate:i}=e,p={year:$,month:B,day:U};return l.map(v=>p[v](u,i))});function $(l,u){const i=l.getFullYear(),p=u.getFullYear();return F(i,p,e.formatYearLabel)}function B(l,u){const i=w("year"),p=P(i,l)?l.getMonth()+1:1,v=Y(i,u)?u.getMonth()+1:12;return F(p,v,e.formatMonthLabel)}function U(l,u){const i=w("year"),p=w("month"),v=P(i,l)&&q(p,l),H=Y(i,u)&&z(p,u),N=v?l.getDate():1,j=H?u.getDate():G(i,p);return F(N,j,e.formatDayLabel)}function w(l){const{columnsType:u}=e,i=u.indexOf(l),p=o.value[i];return p?Number(p):K(e.minDate,e.maxDate,l)}function O(l){c("update:modelValue",l),a.value=l,c("confirm",l)}function A(){c("cancel")}function E(){if(c("open"),e.modelValue&&e.modelValue.length){o.value=[...e.modelValue];return}const{columnsType:l}=e;o.value=l.map(u=>w(u))}function R(){o.value=e.modelValue?[...e.modelValue]:[...a.value],c("closed")}return(l,u)=>(b(),I(Q,{modelValue:o.value,"onUpdate:modelValue":u[0]||(u[0]=i=>o.value=i),show:d.value,"onUpdate:show":u[1]||(u[1]=i=>d.value=i),title:n.title,columns:x.value,teleport:n.teleport,"confirm-button-text":n.confirmButtonText,"cancel-button-text":n.cancelButtonText,linkage:"",onConfirm:O,onCancel:A,onOpen:E,onClosed:R},null,8,["modelValue","show","title","columns","teleport","confirm-button-text","cancel-button-text"]))}}),_={class:"mt-6 text-sm font-mono"},ee=h({__name:"Base",setup(n){const r=y(!1),e=y([]);function c(a){e.value=a}function o(){console.log("cancel")}return(a,d)=>(b(),D(V,null,[g(s(S),{show:r.value,"onUpdate:show":d[0]||(d[0]=x=>r.value=x),title:"Base Selector",onConfirm:c,onCancel:o},null,8,["show"]),t("button",{onClick:d[1]||(d[1]=x=>r.value=!0)},"toggle Base picker"),t("p",_,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),te={class:"mt-6 text-sm font-mono"},ne=h({__name:"ColumnsType",setup(n){const r=y(!1),e=y([2030,8]);return(c,o)=>(b(),D(V,null,[g(s(S),{modelValue:e.value,"onUpdate:modelValue":o[0]||(o[0]=a=>e.value=a),show:r.value,"onUpdate:show":o[1]||(o[1]=a=>r.value=a),title:"Columns Type Selector","columns-type":["year","month"]},null,8,["modelValue","show"]),t("button",{onClick:o[2]||(o[2]=a=>r.value=!0)},"toggle Columns Type picker"),t("p",te,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),oe={class:"mt-6 text-sm font-mono"},ae=h({__name:"CustomRange",setup(n){const r=y(!1),e=y([]);return(c,o)=>(b(),D(V,null,[g(s(S),{modelValue:e.value,"onUpdate:modelValue":o[0]||(o[0]=a=>e.value=a),show:r.value,"onUpdate:show":o[1]||(o[1]=a=>r.value=a),title:"Custom Range Selector","min-date":new Date(2024,0,1),"max-date":new Date(2026,5,1)},null,8,["modelValue","show","min-date","max-date"]),t("button",{onClick:o[2]||(o[2]=a=>r.value=!0)},"toggle Custom Range picker"),t("p",oe,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),le={class:"mt-6 text-sm font-mono"},ue=h({__name:"LabelFormatter",setup(n){const r=y(!1),e=y([]),c={1:"Jan",2:"Feb",3:"Mar",4:"Apr",5:"May",6:"Jun",7:"Jul",8:"Aug",9:"Sep",10:"Oct",11:"Nov",12:"Dec"};return(o,a)=>(b(),D(V,null,[g(s(S),{modelValue:e.value,"onUpdate:modelValue":a[0]||(a[0]=d=>e.value=d),show:r.value,"onUpdate:show":a[1]||(a[1]=d=>r.value=d),title:"Label Formatter Selector","columns-type":["month","day","year"],"format-month-label":d=>c[d],"format-day-label":d=>d.padStart(2,"0")},null,8,["modelValue","show","format-month-label","format-day-label"]),t("button",{onClick:a[2]||(a[2]=d=>r.value=!0)},"toggle Label Formatter picker"),t("p",le,"Selected date: "+M(e.value.join(" / ")||"not selected yet"),1)],64))}}),re=["innerHTML"],se=["innerHTML"],de=["innerHTML"],pe=h({__name:"ComponentDatePicker",props:{frontEndFrame:{},baseSource:{},basePlayground:{},columnsTypeSource:{},columnsTypePlayground:{},customRangeSource:{},customRangePlayground:{},labelFormatterSource:{},labelFormatterPlayground:{},indexMd:{},language:{}},setup(n){return(r,e)=>(b(),D("div",null,[e[6]||(e[6]=t("h2",null,"Date Picker",-1)),t("p",null,[e[0]||(e[0]=m(" Date Picker component with ",-1)),t("code",null,M(n.frontEndFrame),1),e[1]||(e[1]=m(". ",-1))]),t("div",{innerHTML:s(L).render(s(X))},null,8,re),g(s(T),{title:"Base Usage",source:n.baseSource,playground:n.basePlayground,language:n.language},{description:f(()=>[...e[2]||(e[2]=[t("p",null,"Date picker for selecting year, month and day.",-1),t("p",null,"When no date is specified, the current date is selected by default.",-1)])]),default:f(()=>[g(s(ee))]),_:1},8,["source","playground","language"]),g(s(T),{title:"Columns Type",source:n.columnsTypeSource,playground:n.columnsTypePlayground,language:n.language},{description:f(()=>[...e[3]||(e[3]=[t("p",null,[m(" The type of options can be controlled through the "),t("code",null,"columnsType"),m(" attribute, which supports permuting and combining year, month and day in any order. ")],-1),t("p",null,"Three options of year, month and day are displayed by default.",-1),t("ul",{class:"mt-4 pl-8 list-disc"},[t("li",null,[t("code",null,"['year']"),m(" represents the option to display only the year.")]),t("li",null,[t("code",null,"['month']"),m(" represents the option to display only the month.")]),t("li",null,[t("code",null,"['year', 'month']"),m(" represents the option to display only the year and month.")]),t("li",null,[t("code",null,"['month', 'day']"),m(" represents the option to display only the month and day.")])],-1)])]),default:f(()=>[g(s(ne))]),_:1},8,["source","playground","language"]),g(s(T),{title:"Custom Date Range",source:n.customRangeSource,playground:n.customRangePlayground,language:n.language},{description:f(()=>[...e[4]||(e[4]=[t("p",null,[m("Optional time ranges are set via the "),t("code",null,"minDate"),m(" and "),t("code",null,"maxDate"),m(" properties.")],-1),t("p",null,"The default selectable range is 10 years before and after the current year.",-1)])]),default:f(()=>[g(s(ae))]),_:1},8,["source","playground","language"]),g(s(T),{title:"Label Formatter",source:n.labelFormatterSource,playground:n.labelFormatterPlayground,language:n.language},{description:f(()=>[...e[5]||(e[5]=[t("p",null,[m(" Display labels can be converted through the "),t("code",null,"formatYearLabel"),m(", "),t("code",null,"formatMonthLabel"),m(" and "),t("code",null,"formatDayLabel"),m(" properties. ")],-1)])]),default:f(()=>[g(s(ue))]),_:1},8,["source","playground","language"]),e[7]||(e[7]=t("h3",null,"API",-1)),t("div",{innerHTML:s(L).render(n.indexMd)},null,8,se),t("div",{innerHTML:s(L).render(s(Z))},null,8,de)]))}});export{pe as _};
