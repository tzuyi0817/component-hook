import{D as V}from"./Demo-DZYHfayt.js";import{l as H,m as W,n as q,o as B,g as F,p as z,_ as G,i as J,c as K}from"./installation-CxCcnAYD.js";import{d as M,r as c,h as x,c as Q,o as y,a as v,F as L,b as m,e as n,u as p,t as h,g as a,w as g}from"./index-hD4nmzhg.js";import{m as A}from"./index-BekVQ9Ef.js";const k=M({__name:"TimePicker",props:{show:{type:Boolean},modelValue:{},title:{default:q},columnsType:{default:()=>W},minTime:{},maxTime:{},teleport:{},confirmButtonText:{},cancelButtonText:{},formatHourLabel:{type:Function,default:H},formatMinuteLabel:{type:Function,default:H},formatSecondLabel:{type:Function,default:H}},emits:["update:show","update:modelValue","confirm","cancel","open","closed"],setup(f,{emit:o}){const e=f,i=o,l=c([]),u=c([]),r=x({get:()=>e.show,set:t=>i("update:show",t)}),b=x(()=>{const{columnsType:t}=e,s={hour:_,minute:O,second:R};return t.map(d=>s[d]())}),S=x(()=>B(e.minTime??"")??{hour:0,minute:0,second:0}),w=x(()=>B(e.maxTime??"")??{hour:23,minute:59,second:59});function _(){const t=S.value.hour,s=w.value.hour;return F(t,s,e.formatHourLabel)}function O(){const t=P("hour"),{hour:s,minute:d}=S.value,{hour:T,minute:C}=w.value;return F(t===s?d:0,t===T?C:59,e.formatMinuteLabel)}function R(){const t=P("hour"),s=P("minute"),{hour:d,minute:T,second:C}=S.value,{hour:U,minute:$,second:j}=w.value;return F(t===d&&s===T?C:0,t===U&&s===$?j:59,e.formatSecondLabel)}function P(t){const{columnsType:s}=e,d=s.indexOf(t),T=l.value[d];return T!==void 0?Number(T):z(S.value,w.value,t)}function D(t){i("update:modelValue",t),u.value=t,i("confirm",t)}function E(){i("cancel")}function I(){if(i("open"),e.modelValue&&e.modelValue.length){l.value=[...e.modelValue];return}const{columnsType:t}=e;l.value=t.map(s=>P(s))}function N(){l.value=e.modelValue?[...e.modelValue]:[...u.value],i("closed")}return(t,s)=>(y(),Q(G,{modelValue:l.value,"onUpdate:modelValue":s[0]||(s[0]=d=>l.value=d),show:r.value,"onUpdate:show":s[1]||(s[1]=d=>r.value=d),title:t.title,columns:b.value,teleport:t.teleport,"confirm-button-text":t.confirmButtonText,"cancel-button-text":t.cancelButtonText,linkage:"",onConfirm:D,onCancel:E,onOpen:I,onClosed:N},null,8,["modelValue","show","title","columns","teleport","confirm-button-text","cancel-button-text"]))}}),X={class:"mt-6 text-sm font-mono"},Y=M({__name:"Base",setup(f){const o=c(!1),e=c([]);function i(u){e.value=u}function l(){console.log("cancel")}return(u,r)=>(y(),v(L,null,[m(p(k),{show:o.value,"onUpdate:show":r[0]||(r[0]=b=>o.value=b),title:"Base Selector",onConfirm:i,onCancel:l},null,8,["show"]),n("button",{onClick:r[1]||(r[1]=b=>o.value=!0)},"toggle Base picker"),n("p",X,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),Z={class:"mt-6 text-sm font-mono"},ee=M({__name:"ColumnsType",setup(f){const o=c(!1),e=c([12,50]);return(i,l)=>(y(),v(L,null,[m(p(k),{modelValue:e.value,"onUpdate:modelValue":l[0]||(l[0]=u=>e.value=u),show:o.value,"onUpdate:show":l[1]||(l[1]=u=>o.value=u),title:"Columns Type Selector","columns-type":["hour","minute"]},null,8,["modelValue","show"]),n("button",{onClick:l[2]||(l[2]=u=>o.value=!0)},"toggle Columns Type picker"),n("p",Z,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),ne={class:"mt-6 text-sm font-mono"},oe=M({__name:"CustomRange",setup(f){const o=c(!1),e=c([]);return(i,l)=>(y(),v(L,null,[m(p(k),{modelValue:e.value,"onUpdate:modelValue":l[0]||(l[0]=u=>e.value=u),show:o.value,"onUpdate:show":l[1]||(l[1]=u=>o.value=u),title:"Custom Range Selector","min-time":"12:20:30","max-time":"16:30:48"},null,8,["modelValue","show"]),n("button",{onClick:l[2]||(l[2]=u=>o.value=!0)},"toggle Custom Range picker"),n("p",ne,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),te={class:"mt-6 text-sm font-mono"},le=M({__name:"LabelFormatter",setup(f){const o=c(!1),e=c([]),i={0:"12 AM",1:"1 AM",2:"2 AM",3:"3 AM",4:"4 AM",5:"5 AM",6:"6 AM",7:"7 AM",8:"8 AM",9:"9 AM",10:"10 AM",11:"11 AM",12:"12 PM",13:"1 PM",14:"2 PM",15:"3 PM",16:"4 PM",17:"5 PM",18:"6 PM",19:"7 PM",20:"8 PM",21:"9 PM",22:"10 PM",23:"11 PM"};return(l,u)=>(y(),v(L,null,[m(p(k),{modelValue:e.value,"onUpdate:modelValue":u[0]||(u[0]=r=>e.value=r),show:o.value,"onUpdate:show":u[1]||(u[1]=r=>o.value=r),title:"Label Formatter Selector","format-hour-label":r=>i[r]},null,8,["modelValue","show","format-hour-label"]),n("button",{onClick:u[2]||(u[2]=r=>o.value=!0)},"toggle Label Formatter picker"),n("p",te,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),ue=["innerHTML"],ae=["innerHTML"],se=["innerHTML"],ge=M({__name:"ComponentTimePicker",props:{frontEndFrame:{},baseSource:{},basePlayground:{},columnsTypeSource:{},columnsTypePlayground:{},customRangeSource:{},customRangePlayground:{},labelFormatterSource:{},labelFormatterPlayground:{},indexMd:{},language:{}},setup(f){return(o,e)=>(y(),v("div",null,[e[6]||(e[6]=n("h2",null,"Time Picker",-1)),n("p",null,[e[0]||(e[0]=a(" Time Picker component with ")),n("code",null,h(o.frontEndFrame),1),e[1]||(e[1]=a(". "))]),n("div",{innerHTML:p(A).render(p(J))},null,8,ue),m(V,{title:"Base Usage",source:o.baseSource,playground:o.basePlayground,language:o.language},{description:g(()=>e[2]||(e[2]=[n("p",null,"Time picker for selecting hour, minute and second.",-1),n("p",null,"When no time is specified, the current time is selected by default.",-1)])),default:g(()=>[m(Y)]),_:1},8,["source","playground","language"]),m(V,{title:"Columns Type",source:o.columnsTypeSource,playground:o.columnsTypePlayground,language:o.language},{description:g(()=>e[3]||(e[3]=[n("p",null,[a(" The type of options can be controlled through the "),n("code",null,"columnsType"),a(" attribute, which supports permuting and combining hour, minute and second in any order. ")],-1),n("p",null,"Three options of hour, minute and second are displayed by default.",-1),n("ul",{class:"mt-4 pl-8 list-disc"},[n("li",null,[n("code",null,"['hour']"),a(" represents the option to display only the hour.")]),n("li",null,[n("code",null,"['minute']"),a(" represents the option to display only the minute.")]),n("li",null,[n("code",null,"['hour', 'minute']"),a(" represents the option to display only the hour and minute.")]),n("li",null,[n("code",null,"['minute', 'second']"),a(" represents the option to display only the minute and second.")])],-1)])),default:g(()=>[m(ee)]),_:1},8,["source","playground","language"]),m(V,{title:"Custom Time Range",source:o.customRangeSource,playground:o.customRangePlayground,language:o.language},{description:g(()=>e[4]||(e[4]=[n("p",null,[a(" Optional time ranges are set via the "),n("code",null,"minTime"),a(" and "),n("code",null,"maxTime"),a(" properties, with the format "),n("code",null,"00:00:00"),a(". ")],-1),n("p",null,[a(" For example, in the following example, users can select any time between "),n("code",null,"12:20:30"),a(" and "),n("code",null,"16:30:48"),a(". ")],-1)])),default:g(()=>[m(oe)]),_:1},8,["source","playground","language"]),m(V,{title:"Label Formatter",source:o.labelFormatterSource,playground:o.labelFormatterPlayground,language:o.language},{description:g(()=>e[5]||(e[5]=[n("p",null,[a(" Display labels can be converted through the "),n("code",null,"formatHourLabel"),a(", "),n("code",null,"formatMinuteLabel"),a(" and "),n("code",null,"formatSecondLabel"),a(" properties. ")],-1)])),default:g(()=>[m(le)]),_:1},8,["source","playground","language"]),e[7]||(e[7]=n("h3",null,"API",-1)),n("div",{innerHTML:p(A).render(o.indexMd)},null,8,ae),n("div",{innerHTML:p(A).render(p(K))},null,8,se)]))}});export{ge as _};
