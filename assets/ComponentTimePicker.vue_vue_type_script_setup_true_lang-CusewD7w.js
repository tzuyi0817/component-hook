import{d as M,r as g,h as P,c as q,o as y,a as v,F as L,b as d,e as n,u as i,t as h,g as a,m as H,w as f}from"./index-DpJ0bSUx.js";import{D as V}from"./index-Dxakq7hu.js";import{l as F,m as z,n as G,o as B,g as A,p as J,_ as K,i as Q,c as X}from"./installation-D8Y5kEc_.js";const k=M({__name:"TimePicker",props:{show:{type:Boolean},modelValue:{},title:{default:G},columnsType:{default:()=>z},minTime:{},maxTime:{},teleport:{},confirmButtonText:{},cancelButtonText:{},formatHourLabel:{type:Function,default:F},formatMinuteLabel:{type:Function,default:F},formatSecondLabel:{type:Function,default:F}},emits:["update:show","update:modelValue","confirm","cancel","open","closed"],setup(t,{emit:s}){const e=t,c=s,o=g([]),u=g([]),m=P({get:()=>e.show,set:l=>c("update:show",l)}),x=P(()=>{const{columnsType:l}=e,r={hour:O,minute:R,second:D};return l.map(p=>r[p]())}),b=P(()=>B(e.minTime??"")??{hour:0,minute:0,second:0}),S=P(()=>B(e.maxTime??"")??{hour:23,minute:59,second:59});function O(){const l=b.value.hour,r=S.value.hour;return A(l,r,e.formatHourLabel)}function R(){const l=w("hour"),{hour:r,minute:p}=b.value,{hour:T,minute:C}=S.value;return A(l===r?p:0,l===T?C:59,e.formatMinuteLabel)}function D(){const l=w("hour"),r=w("minute"),{hour:p,minute:T,second:C}=b.value,{hour:U,minute:$,second:W}=S.value;return A(l===p&&r===T?C:0,l===U&&r===$?W:59,e.formatSecondLabel)}function w(l){const{columnsType:r}=e,p=r.indexOf(l),T=o.value[p];return T!==void 0?Number(T):J(b.value,S.value,l)}function E(l){c("update:modelValue",l),u.value=l,c("confirm",l)}function I(){c("cancel")}function N(){if(c("open"),e.modelValue&&e.modelValue.length){o.value=[...e.modelValue];return}const{columnsType:l}=e;o.value=l.map(r=>w(r))}function j(){o.value=e.modelValue?[...e.modelValue]:[...u.value],c("closed")}return(l,r)=>(y(),q(K,{modelValue:o.value,"onUpdate:modelValue":r[0]||(r[0]=p=>o.value=p),show:m.value,"onUpdate:show":r[1]||(r[1]=p=>m.value=p),title:t.title,columns:x.value,teleport:t.teleport,"confirm-button-text":t.confirmButtonText,"cancel-button-text":t.cancelButtonText,linkage:"",onConfirm:E,onCancel:I,onOpen:N,onClosed:j},null,8,["modelValue","show","title","columns","teleport","confirm-button-text","cancel-button-text"]))}}),Y={class:"mt-6 text-sm font-mono"},Z=M({__name:"Base",setup(t){const s=g(!1),e=g([]);function c(u){e.value=u}function o(){console.log("cancel")}return(u,m)=>(y(),v(L,null,[d(i(k),{show:s.value,"onUpdate:show":m[0]||(m[0]=x=>s.value=x),title:"Base Selector",onConfirm:c,onCancel:o},null,8,["show"]),n("button",{onClick:m[1]||(m[1]=x=>s.value=!0)},"toggle Base picker"),n("p",Y,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),_={class:"mt-6 text-sm font-mono"},ee=M({__name:"ColumnsType",setup(t){const s=g(!1),e=g([12,50]);return(c,o)=>(y(),v(L,null,[d(i(k),{modelValue:e.value,"onUpdate:modelValue":o[0]||(o[0]=u=>e.value=u),show:s.value,"onUpdate:show":o[1]||(o[1]=u=>s.value=u),title:"Columns Type Selector","columns-type":["hour","minute"]},null,8,["modelValue","show"]),n("button",{onClick:o[2]||(o[2]=u=>s.value=!0)},"toggle Columns Type picker"),n("p",_,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),ne={class:"mt-6 text-sm font-mono"},te=M({__name:"CustomRange",setup(t){const s=g(!1),e=g([]);return(c,o)=>(y(),v(L,null,[d(i(k),{modelValue:e.value,"onUpdate:modelValue":o[0]||(o[0]=u=>e.value=u),show:s.value,"onUpdate:show":o[1]||(o[1]=u=>s.value=u),title:"Custom Range Selector","min-time":"12:20:30","max-time":"16:30:48"},null,8,["modelValue","show"]),n("button",{onClick:o[2]||(o[2]=u=>s.value=!0)},"toggle Custom Range picker"),n("p",ne,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),oe={class:"mt-6 text-sm font-mono"},le=M({__name:"LabelFormatter",setup(t){const s=g(!1),e=g([]),c={0:"12 AM",1:"1 AM",2:"2 AM",3:"3 AM",4:"4 AM",5:"5 AM",6:"6 AM",7:"7 AM",8:"8 AM",9:"9 AM",10:"10 AM",11:"11 AM",12:"12 PM",13:"1 PM",14:"2 PM",15:"3 PM",16:"4 PM",17:"5 PM",18:"6 PM",19:"7 PM",20:"8 PM",21:"9 PM",22:"10 PM",23:"11 PM"};return(o,u)=>(y(),v(L,null,[d(i(k),{modelValue:e.value,"onUpdate:modelValue":u[0]||(u[0]=m=>e.value=m),show:s.value,"onUpdate:show":u[1]||(u[1]=m=>s.value=m),title:"Label Formatter Selector","format-hour-label":m=>c[m]},null,8,["modelValue","show","format-hour-label"]),n("button",{onClick:u[2]||(u[2]=m=>s.value=!0)},"toggle Label Formatter picker"),n("p",oe,"Selected time: "+h(e.value.join(":")||"not selected yet"),1)],64))}}),ue=["innerHTML"],ae=["innerHTML"],se=["innerHTML"],pe=M({__name:"ComponentTimePicker",props:{frontEndFrame:{},baseSource:{},basePlayground:{},columnsTypeSource:{},columnsTypePlayground:{},customRangeSource:{},customRangePlayground:{},labelFormatterSource:{},labelFormatterPlayground:{},indexMd:{},language:{}},setup(t){return(s,e)=>(y(),v("div",null,[e[6]||(e[6]=n("h2",null,"Time Picker",-1)),n("p",null,[e[0]||(e[0]=a(" Time Picker component with ",-1)),n("code",null,h(t.frontEndFrame),1),e[1]||(e[1]=a(". ",-1))]),n("div",{innerHTML:i(H).render(i(Q))},null,8,ue),d(i(V),{title:"Base Usage",source:t.baseSource,playground:t.basePlayground,language:t.language},{description:f(()=>[...e[2]||(e[2]=[n("p",null,"Time picker for selecting hour, minute and second.",-1),n("p",null,"When no time is specified, the current time is selected by default.",-1)])]),default:f(()=>[d(i(Z))]),_:1},8,["source","playground","language"]),d(i(V),{title:"Columns Type",source:t.columnsTypeSource,playground:t.columnsTypePlayground,language:t.language},{description:f(()=>[...e[3]||(e[3]=[n("p",null,[a(" The type of options can be controlled through the "),n("code",null,"columnsType"),a(" attribute, which supports permuting and combining hour, minute and second in any order. ")],-1),n("p",null,"Three options of hour, minute and second are displayed by default.",-1),n("ul",{class:"mt-4 pl-8 list-disc"},[n("li",null,[n("code",null,"['hour']"),a(" represents the option to display only the hour.")]),n("li",null,[n("code",null,"['minute']"),a(" represents the option to display only the minute.")]),n("li",null,[n("code",null,"['hour', 'minute']"),a(" represents the option to display only the hour and minute.")]),n("li",null,[n("code",null,"['minute', 'second']"),a(" represents the option to display only the minute and second.")])],-1)])]),default:f(()=>[d(i(ee))]),_:1},8,["source","playground","language"]),d(i(V),{title:"Custom Time Range",source:t.customRangeSource,playground:t.customRangePlayground,language:t.language},{description:f(()=>[...e[4]||(e[4]=[n("p",null,[a(" Optional time ranges are set via the "),n("code",null,"minTime"),a(" and "),n("code",null,"maxTime"),a(" properties, with the format "),n("code",null,"00:00:00"),a(". ")],-1),n("p",null,[a(" For example, in the following example, users can select any time between "),n("code",null,"12:20:30"),a(" and "),n("code",null,"16:30:48"),a(". ")],-1)])]),default:f(()=>[d(i(te))]),_:1},8,["source","playground","language"]),d(i(V),{title:"Label Formatter",source:t.labelFormatterSource,playground:t.labelFormatterPlayground,language:t.language},{description:f(()=>[...e[5]||(e[5]=[n("p",null,[a(" Display labels can be converted through the "),n("code",null,"formatHourLabel"),a(", "),n("code",null,"formatMinuteLabel"),a(" and "),n("code",null,"formatSecondLabel"),a(" properties. ")],-1)])]),default:f(()=>[d(i(le))]),_:1},8,["source","playground","language"]),e[7]||(e[7]=n("h3",null,"API",-1)),n("div",{innerHTML:i(H).render(t.indexMd)},null,8,ae),n("div",{innerHTML:i(H).render(i(X))},null,8,se)]))}});export{pe as _};
